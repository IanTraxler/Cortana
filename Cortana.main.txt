import datetime
import openai as sr
import pyttsx3
import cortana


def speak(audio):
    engine = pyttsx3.init()
    # getter method(gets the current value
    # of engine property)
    voices = engine.getProperty('voices')

    # setter method .[0]=male voice and
    # [1]=female voice in set Property.
    engine.setProperty('voice', voices[1].id)

    # Method for the speaking of the assistant
    engine.say(audio)

    # Blocks while processing all the currently
    # queued commands
    engine.runAndWait()


def takeCommand():
    r = sr.Recognizer()

    # from the speech_Recognition module
    # we will use the Microphone module
    # for listening the command
    with sr.Microphone() as source:
        print('Listening')

        # seconds of non-speaking audio before
        # a phrase is considered complete
        r.pause_threshold = 0.7
        audio = r.listen(source)

        # Now we will be using the try and catch
        # method so that if sound is recognized
        # it is good else we will have exception
        # handling
        try:
            print("Recognizing")

            # for Listening the command in indian
            # english we can also use 'hi-In'
            # for hindi recognizing
            query = r.recognize_google(audio, language='en-in')
            print("the command is printed=", query)

        except Exception as e:
            print(e)
            print("Say that again, please")
            return "None"

        return query


def Hello(cortana):
    speak("Hello Kayla!, this is a hardcoded, canned response for now, but you can respect the vision, no?")
    speak("I love you, baby. From Ian.")


def TellTime():
    time = str(datetime.datetime.now())
    print(time)
    hour = time[11:13]
    min = time[14:16]


def Cortana():
    return cortana


if __name__ == '__main__':
    Hello()
    takeCommand()
